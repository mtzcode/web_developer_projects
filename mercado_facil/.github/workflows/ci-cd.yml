name: CI/CD Pipeline - Mercado F√°cil

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  FLUTTER_VERSION: "3.19.0"
  DART_VERSION: "3.3.0"

jobs:
  # ===== AN√ÅLISE E TESTES =====
  analyze:
    name: An√°lise de C√≥digo
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze code
        run: flutter analyze

      - name: Check formatting
        run: dart format --set-exit-if-changed .

  test:
    name: Testes Automatizados
    runs-on: ubuntu-latest
    needs: analyze
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Run unit tests
        run: flutter test --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Generate coverage report
        run: |
          genhtml coverage/lcov.info -o coverage/html
          echo "Coverage report generated in coverage/html/"

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/html/

  # ===== BUILD ANDROID =====
  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > android/app/keystore.jks
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}

      - name: Build APK
        run: flutter build apk --release

      - name: Build App Bundle
        run: flutter build appbundle --release

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload App Bundle
        uses: actions/upload-artifact@v3
        with:
          name: app-bundle
          path: build/app/outputs/bundle/release/app-release.aab

  # ===== BUILD WEB =====
  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Build Web
        run: flutter build web --release --web-renderer canvaskit

      - name: Upload Web Build
        uses: actions/upload-artifact@v3
        with:
          name: web-build
          path: build/web/

  # ===== DEPLOY WEB =====
  deploy-web:
    name: Deploy Web
    runs-on: ubuntu-latest
    needs: build-web
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Web Build
        uses: actions/download-artifact@v3
        with:
          name: web-build
          path: build/web/

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}"
          channelId: live
          projectId: ${{ secrets.FIREBASE_PROJECT_ID }}

  # ===== DEPLOY ANDROID =====
  deploy-android:
    name: Deploy Android
    runs-on: ubuntu-latest
    needs: build-android
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download App Bundle
        uses: actions/download-artifact@v3
        with:
          name: app-bundle
          path: build/app/outputs/bundle/release/

      - name: Upload to Play Store (Internal)
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_CONFIG_JSON }}
          packageName: com.mercadofacil.app
          releaseFiles: build/app/outputs/bundle/release/app-release.aab
          track: internal

  # ===== SECURITY SCAN =====
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

  # ===== NOTIFICATIONS =====
  notify:
    name: Notifications
    runs-on: ubuntu-latest
    needs: [deploy-web, deploy-android, security-scan]
    if: always() && github.ref == 'refs/heads/main'
    steps:
      - name: Notify on Success
        if: needs.deploy-web.result == 'success' && needs.deploy-android.result == 'success'
        run: |
          echo "üöÄ Deploy realizado com sucesso!"
          echo "Web: https://${{ secrets.FIREBASE_PROJECT_ID }}.web.app"
          echo "Android: Dispon√≠vel no Play Console (Internal)"

      - name: Notify on Failure
        if: needs.deploy-web.result == 'failure' || needs.deploy-android.result == 'failure'
        run: |
          echo "‚ùå Deploy falhou!"
          echo "Verifique os logs para mais detalhes."
