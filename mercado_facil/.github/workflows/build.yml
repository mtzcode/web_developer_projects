name: Build Automation - Mercado Fácil

on:
  push:
    branches: [main, develop, feature/*]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      platform:
        description: "Platform to build"
        required: true
        default: "all"
        type: choice
        options:
          - all
          - android
          - web
          - ios
          - desktop

env:
  FLUTTER_VERSION: "3.19.0"

jobs:
  # ===== BUILD ALL PLATFORMS =====
  build-all:
    name: Build All Platforms
    runs-on: ubuntu-latest
    if: github.event.inputs.platform == 'all' || github.event_name != 'workflow_dispatch'
    strategy:
      matrix:
        platform: [android, web, desktop]
        include:
          - platform: android
            os: ubuntu-latest
            java-version: "17"
          - platform: web
            os: ubuntu-latest
            java-version: "17"
          - platform: desktop
            os: ubuntu-latest
            java-version: "17"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: ${{ matrix.java-version }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Build ${{ matrix.platform }}
        run: |
          case ${{ matrix.platform }} in
            android)
              flutter build apk --release
              flutter build appbundle --release
              ;;
            web)
              flutter build web --release --web-renderer canvaskit
              ;;
            desktop)
              flutter build windows --release
              flutter build linux --release
              ;;
          esac

      - name: Upload ${{ matrix.platform }} artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform }}-build-${{ github.run_number }}
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab
            build/web/
            build/windows/runner/Release/
            build/linux/x64/release/bundle/
          retention-days: 30

  # ===== BUILD ANDROID =====
  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    if: github.event.inputs.platform == 'android'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > android/app/keystore.jks
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}

      - name: Build APK Debug
        run: flutter build apk --debug

      - name: Build APK Release
        run: flutter build apk --release

      - name: Build App Bundle
        run: flutter build appbundle --release

      - name: Build App Bundle Debug
        run: flutter build appbundle --debug

      - name: Upload Android artifacts
        uses: actions/upload-artifact@v3
        with:
          name: android-build-${{ github.run_number }}
          path: |
            build/app/outputs/flutter-apk/app-debug.apk
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/debug/app-debug.aab
            build/app/outputs/bundle/release/app-release.aab
          retention-days: 30

  # ===== BUILD WEB =====
  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    if: github.event.inputs.platform == 'web'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Build Web (HTML Renderer)
        run: flutter build web --release --web-renderer html

      - name: Build Web (CanvasKit Renderer)
        run: flutter build web --release --web-renderer canvaskit

      - name: Upload Web artifacts
        uses: actions/upload-artifact@v3
        with:
          name: web-build-${{ github.run_number }}
          path: build/web/
          retention-days: 30

  # ===== BUILD iOS =====
  build-ios:
    name: Build iOS
    runs-on: macos-latest
    if: github.event.inputs.platform == 'ios'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Build iOS
        run: flutter build ios --release --no-codesign

      - name: Upload iOS artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ios-build-${{ github.run_number }}
          path: build/ios/
          retention-days: 30

  # ===== BUILD DESKTOP =====
  build-desktop:
    name: Build Desktop
    runs-on: ubuntu-latest
    if: github.event.inputs.platform == 'desktop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build pkg-config libgtk-3-dev liblzma-dev

      - name: Build Linux
        run: flutter build linux --release

      - name: Build Windows
        run: flutter build windows --release

      - name: Upload Desktop artifacts
        uses: actions/upload-artifact@v3
        with:
          name: desktop-build-${{ github.run_number }}
          path: |
            build/linux/x64/release/bundle/
            build/windows/runner/Release/
          retention-days: 30

  # ===== BUILD ANALYSIS =====
  build-analysis:
    name: Build Analysis
    runs-on: ubuntu-latest
    needs: [build-all, build-android, build-web, build-ios, build-desktop]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze build size
        run: |
          echo "=== BUILD SIZE ANALYSIS ==="
          echo "Android APK:"
          if [ -f "build/app/outputs/flutter-apk/app-release.apk" ]; then
            ls -lh build/app/outputs/flutter-apk/app-release.apk
          fi
          echo "Web Build:"
          if [ -d "build/web" ]; then
            du -sh build/web/
          fi
          echo "Desktop Build:"
          if [ -d "build/linux/x64/release/bundle" ]; then
            du -sh build/linux/x64/release/bundle/
          fi

      - name: Generate build report
        run: |
          echo "# Build Report - ${{ github.run_number }}" > build-report.md
          echo "## Summary" >> build-report.md
          echo "- Build Number: ${{ github.run_number }}" >> build-report.md
          echo "- Commit: ${{ github.sha }}" >> build-report.md
          echo "- Branch: ${{ github.ref }}" >> build-report.md
          echo "- Trigger: ${{ github.event_name }}" >> build-report.md
          echo "" >> build-report.md
          echo "## Platforms Built" >> build-report.md
          echo "- Android: ✅" >> build-report.md
          echo "- Web: ✅" >> build-report.md
          echo "- iOS: ✅" >> build-report.md
          echo "- Desktop: ✅" >> build-report.md

      - name: Upload build report
        uses: actions/upload-artifact@v3
        with:
          name: build-report-${{ github.run_number }}
          path: build-report.md
          retention-days: 30
